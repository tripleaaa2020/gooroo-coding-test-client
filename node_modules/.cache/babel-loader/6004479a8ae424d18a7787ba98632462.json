{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.notify = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Toast = _interopRequireDefault(require(\"./components/Toast\"));\n\nvar _Container = _interopRequireDefault(require(\"./components/Container\"));\n\nvar _defaults = require(\"./defaults\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/* Render React component */\n\n\nfunction renderToast(text, type, timeout, color) {\n  var target = document.getElementById(_defaults.defaults.wrapperId);\n\n  _reactDom[\"default\"].render(_react[\"default\"].createElement(_Toast[\"default\"], {\n    text: text,\n    timeout: timeout,\n    type: type,\n    color: color\n  }), target);\n}\n/* Unmount React component */\n\n\nfunction hide() {\n  var target = document.getElementById(_defaults.defaults.wrapperId);\n\n  _reactDom[\"default\"].unmountComponentAtNode(target);\n}\n/**\n * Show Animated Toast Message\n * Returns true if the toast was shown, or false if show failed due to an existing notification\n *\n * @param  {String|Node} text    Text/Node to be displayed inside the toast.\n * @param  {Object}      options Display options for notification (See example below)\n *\n * [Options example]\n * {\n *   type:    {String} [success/error/info]\n *   timeout: {Int}    [timeout in ms]\n *   style:   {Object} [JS representation of CSS]\n * }\n */\n\n\nfunction show(text, type, timeout, color) {\n  if (!document.getElementById(_defaults.defaults.wrapperId).hasChildNodes()) {\n    // Use default timeout if not set.\n    var renderTimeout = timeout || _defaults.defaults.timeout; // Render Component with Props.\n\n    renderToast(text, type, renderTimeout, color);\n\n    if (renderTimeout === -1) {\n      return false;\n    } // Unmount react component after the animation finished.\n\n\n    setTimeout(function () {\n      hide();\n    }, renderTimeout + _defaults.defaults.animationDuration);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Add to Animated Toast Message Queue\n * Display immediately if no queue\n * @param  {Number} initialRecallDelay   If the call to show fails because of an existing\n *                                       notification, how long to wait until we retry (ms)\n * @param  {Number} recallDelayIncrement Each time a successive call fails, the recall delay\n *                                       will be incremented by this (ms)\n * @return {[type]}                      [description]\n */\n\n\nfunction createShowQueue() {\n  var _this = this;\n\n  var initialRecallDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n  var recallDelayIncrement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500; // Array to hold queued messages\n\n  this.msgs = []; // Is the showNotify function in progress - used so we can call showNotify when a\n  // message is added to an empty queue.\n\n  this.isNotifying = false;\n  this.currentRecallDelay = initialRecallDelay; // Retrieve the next message from the queue and try to show it\n\n  this.showNotify = function () {\n    // If there are no messages in the queue\n    if (_this.msgs.length === 0) {\n      _this.isNotifying = false;\n      return;\n    }\n\n    _this.isNotifying = true;\n\n    var current = _this.msgs.pop(); // show will now return true if it is able to send the message,\n    // or false if there is an existing message\n\n\n    if (show(current.text, current.type, current.timeout, current.color)) {\n      _this.currentRecallDelay = initialRecallDelay;\n\n      if (current.timeout > 0) {\n        setTimeout(function () {\n          return _this.showNotify();\n        }, current.timeout + _defaults.defaults.animationDuration);\n      }\n    } else {\n      // If message show failed, re-add the current message to the front of the queue\n      _this.msgs.unshift(current);\n\n      setTimeout(function () {\n        return _this.showNotify();\n      }, _this.currentRecallDelay);\n      _this.currentRecallDelay += recallDelayIncrement;\n    }\n  };\n\n  return function (text) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _defaults.defaults.timeout;\n    var color = arguments.length > 3 ? arguments[3] : undefined;\n\n    _this.msgs.push({\n      text: text,\n      type: type,\n      timeout: timeout,\n      color: color\n    });\n\n    if (!_this.isNotifying) {\n      _this.showNotify();\n    }\n  };\n}\n/* Export notification functions */\n\n\nvar notify = {\n  show: show,\n  hide: hide,\n  createShowQueue: createShowQueue\n};\nexports.notify = notify;\nvar _default = _Container[\"default\"];\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/mac/react/gooroo-coding-test/bigas-library-client/node_modules/react-notify-toast/bin/notify.js"],"names":["Object","defineProperty","exports","value","notify","_react","_interopRequireDefault","require","_reactDom","_Toast","_Container","_defaults","obj","__esModule","renderToast","text","type","timeout","color","target","document","getElementById","defaults","wrapperId","render","createElement","hide","unmountComponentAtNode","show","hasChildNodes","renderTimeout","setTimeout","animationDuration","createShowQueue","_this","initialRecallDelay","arguments","length","undefined","recallDelayIncrement","msgs","isNotifying","currentRecallDelay","showNotify","current","pop","unshift","push","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.notify = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Toast = _interopRequireDefault(require(\"./components/Toast\"));\n\nvar _Container = _interopRequireDefault(require(\"./components/Container\"));\n\nvar _defaults = require(\"./defaults\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Render React component */\nfunction renderToast(text, type, timeout, color) {\n  var target = document.getElementById(_defaults.defaults.wrapperId);\n\n  _reactDom[\"default\"].render(_react[\"default\"].createElement(_Toast[\"default\"], {\n    text: text,\n    timeout: timeout,\n    type: type,\n    color: color\n  }), target);\n}\n/* Unmount React component */\n\n\nfunction hide() {\n  var target = document.getElementById(_defaults.defaults.wrapperId);\n\n  _reactDom[\"default\"].unmountComponentAtNode(target);\n}\n/**\n * Show Animated Toast Message\n * Returns true if the toast was shown, or false if show failed due to an existing notification\n *\n * @param  {String|Node} text    Text/Node to be displayed inside the toast.\n * @param  {Object}      options Display options for notification (See example below)\n *\n * [Options example]\n * {\n *   type:    {String} [success/error/info]\n *   timeout: {Int}    [timeout in ms]\n *   style:   {Object} [JS representation of CSS]\n * }\n */\n\n\nfunction show(text, type, timeout, color) {\n  if (!document.getElementById(_defaults.defaults.wrapperId).hasChildNodes()) {\n    // Use default timeout if not set.\n    var renderTimeout = timeout || _defaults.defaults.timeout; // Render Component with Props.\n\n    renderToast(text, type, renderTimeout, color);\n\n    if (renderTimeout === -1) {\n      return false;\n    } // Unmount react component after the animation finished.\n\n\n    setTimeout(function () {\n      hide();\n    }, renderTimeout + _defaults.defaults.animationDuration);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Add to Animated Toast Message Queue\n * Display immediately if no queue\n * @param  {Number} initialRecallDelay   If the call to show fails because of an existing\n *                                       notification, how long to wait until we retry (ms)\n * @param  {Number} recallDelayIncrement Each time a successive call fails, the recall delay\n *                                       will be incremented by this (ms)\n * @return {[type]}                      [description]\n */\n\n\nfunction createShowQueue() {\n  var _this = this;\n\n  var initialRecallDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n  var recallDelayIncrement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  // Array to hold queued messages\n  this.msgs = []; // Is the showNotify function in progress - used so we can call showNotify when a\n  // message is added to an empty queue.\n\n  this.isNotifying = false;\n  this.currentRecallDelay = initialRecallDelay; // Retrieve the next message from the queue and try to show it\n\n  this.showNotify = function () {\n    // If there are no messages in the queue\n    if (_this.msgs.length === 0) {\n      _this.isNotifying = false;\n      return;\n    }\n\n    _this.isNotifying = true;\n\n    var current = _this.msgs.pop(); // show will now return true if it is able to send the message,\n    // or false if there is an existing message\n\n\n    if (show(current.text, current.type, current.timeout, current.color)) {\n      _this.currentRecallDelay = initialRecallDelay;\n\n      if (current.timeout > 0) {\n        setTimeout(function () {\n          return _this.showNotify();\n        }, current.timeout + _defaults.defaults.animationDuration);\n      }\n    } else {\n      // If message show failed, re-add the current message to the front of the queue\n      _this.msgs.unshift(current);\n\n      setTimeout(function () {\n        return _this.showNotify();\n      }, _this.currentRecallDelay);\n      _this.currentRecallDelay += recallDelayIncrement;\n    }\n  };\n\n  return function (text) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _defaults.defaults.timeout;\n    var color = arguments.length > 3 ? arguments[3] : undefined;\n\n    _this.msgs.push({\n      text: text,\n      type: type,\n      timeout: timeout,\n      color: color\n    });\n\n    if (!_this.isNotifying) {\n      _this.showNotify();\n    }\n  };\n}\n/* Export notification functions */\n\n\nvar notify = {\n  show: show,\n  hide: hide,\n  createShowQueue: createShowQueue\n};\nexports.notify = notify;\nvar _default = _Container[\"default\"];\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}