{"ast":null,"code":"var _jsxFileName = \"/Users/mac/react/gooroo-coding-test/bigas-library-client/src/display/layouts/NavigationLeft.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Redux\n// import {useDispatch,useSelector} from 'react-redux'\n// import {\n//     ON_HOVER_NAVIGATION,\n//     ON_RESET_HOVER_NAVIGATION,\n//     ON_SET_ACTIVE_PAGE,\n//     ON_TOGGLE_MENU_COLLAPSE,\n//     SET_UNREAD_ORDER\n// } from '../../store/actions/navigationAction';\n// import { getUnreadOrders } from \"../../services/order/Order\";\n// Custom Style\n\nimport './NavigationLeft.scss'; // End Custom Style\n// Icons\n\nimport minimizeIcon from '../../assets/images/icons/minimize.png';\nimport minimizeIconMobile from '../../assets/images/icons/minimize-mobile.png';\nimport logoCwi from '../../assets/images/general/logo-cwi.png';\n\nconst NavigationLeft = () => {\n  // const dispatch = useDispatch()\n  // const navigation = useSelector(state => state.navigation)\n  // let urlParam = window.location.pathname.split('/')\n  // const param = '/'+urlParam[1]\n  // useEffect(()=>{\n  //     dispatch({type: ON_SET_ACTIVE_PAGE,param})\n  //     getUnreadOrders().then(res => {\n  //         let data = res.rows\n  //         let countData = res.count\n  //         dispatch({type: SET_UNREAD_ORDER, data, countData})\n  //     })\n  // },[dispatch,param])\n  // const handleHoverNavigation = (index) => {\n  //     dispatch({type: ON_HOVER_NAVIGATION, index})\n  // }\n  // const handleResetHoverNavigation = () => {\n  //     dispatch({type: ON_RESET_HOVER_NAVIGATION})\n  // }\n  // const handleCollapseMenu = () => {\n  //     dispatch({type: ON_TOGGLE_MENU_COLLAPSE})\n  // }\n  return React.createElement(\"div\", {\n    className: \"py-4 bgWhite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Test\")));\n};\n\nexport default NavigationLeft;","map":{"version":3,"sources":["/Users/mac/react/gooroo-coding-test/bigas-library-client/src/display/layouts/NavigationLeft.js"],"names":["React","useEffect","Link","minimizeIcon","minimizeIconMobile","logoCwi","NavigationLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,uBAAP,C,CACA;AAEA;;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,kBAAP,MAA+B,+CAA/B;AACA,OAAOC,OAAP,MAAqB,0CAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CADJ;AAqCH,CA9DD;;AAiEA,eAAeA,cAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\n\n// Redux\n// import {useDispatch,useSelector} from 'react-redux'\n// import {\n//     ON_HOVER_NAVIGATION,\n//     ON_RESET_HOVER_NAVIGATION,\n//     ON_SET_ACTIVE_PAGE,\n//     ON_TOGGLE_MENU_COLLAPSE,\n//     SET_UNREAD_ORDER\n// } from '../../store/actions/navigationAction';\n// import { getUnreadOrders } from \"../../services/order/Order\";\n\n// Custom Style\nimport './NavigationLeft.scss'\n// End Custom Style\n\n// Icons\nimport minimizeIcon from '../../assets/images/icons/minimize.png'\nimport minimizeIconMobile from '../../assets/images/icons/minimize-mobile.png'\nimport logoCwi  from '../../assets/images/general/logo-cwi.png'\n\nconst NavigationLeft = () => {\n    // const dispatch = useDispatch()\n    // const navigation = useSelector(state => state.navigation)\n    \n    // let urlParam = window.location.pathname.split('/')\n    // const param = '/'+urlParam[1]\n    \n    // useEffect(()=>{\n    //     dispatch({type: ON_SET_ACTIVE_PAGE,param})\n    //     getUnreadOrders().then(res => {\n    //         let data = res.rows\n    //         let countData = res.count\n    //         dispatch({type: SET_UNREAD_ORDER, data, countData})\n    //     })\n    // },[dispatch,param])\n    \n    // const handleHoverNavigation = (index) => {\n    //     dispatch({type: ON_HOVER_NAVIGATION, index})\n    // }\n    // const handleResetHoverNavigation = () => {\n    //     dispatch({type: ON_RESET_HOVER_NAVIGATION})\n    // }\n    // const handleCollapseMenu = () => {\n    //     dispatch({type: ON_TOGGLE_MENU_COLLAPSE})\n    // }\n    return(\n        <div className=\"py-4 bgWhite\">\n            <ul>\n                <li>Test</li>\n                {/* <li>\n                    <div className=\"mb-5\" style={{cursor:'pointer',textAlign:(navigation.collapse ? 'center' : 'left')}}>\n\n                        <img height=\"14\" onClick={()=>handleCollapseMenu()} src={(navigation.collapse ? minimizeIconMobile : minimizeIcon)} alt=\"minimize\" className=\"mx-4 cursor-pointer\"/>\n                        {!navigation.collapse ?\n                        <img width=\"52\" src={logoCwi} alt=\"Cigarworld\"/> : null}\n                    </div>\n                </li>\n                {navigation.listMenu.map((data,i)=>{\n                    return(\n                        <li key={i} className=\"position-relative\">\n                            <Link \n                            onMouseOver={()=>handleHoverNavigation(i)}\n                            onMouseLeave={()=>handleResetHoverNavigation()}\n                            to={data.link} \n                            className={['py-3 d-block greyDefault itemLink position-relative',(data.active ? 'activeLink' : ''),(navigation.collapse ? 'text-center' : '')].join(' ')}>\n                                <span className=\"pinActive d-inline-block position-absolute\"></span>\n                                <img className=\"mx-4\" src={(data.hover || data.active ? data.iconOrange : data.iconGrey)} alt={data.title} />\n                                \n                                {navigation.collapse ? '' : data.title}\n                                {!navigation.collapse && data.title === 'Order' && navigation.orderNotif !== 0 && (\n                                    <div className=\"position-absolute r-0 text-center smallFont\"\n                                    style={{top: '17px', border: 'none', borderRadius: '50px', width: '25px', height: '25px',\n                                    padding: '4px 0px', color: 'white', backgroundColor: '#f5a623'}}>{navigation.orderNotif}</div>\n                                )}\n                            </Link>\n                        </li>\n                    )\n                })} */}\n               \n            </ul>\n        </div> \n    )\n}\n\n\nexport default NavigationLeft"]},"metadata":{},"sourceType":"module"}