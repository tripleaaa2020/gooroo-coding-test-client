{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../utils/Variables';\nexport const attemptLogin = async contributor => {\n  var statusInt = 0;\n  let authToken = null;\n  let {\n    email,\n    password\n  } = contributor;\n  await axios.post(API_URL + 'auth/login', {\n    email,\n    password\n  }).then(function (response) {\n    console.log(\"attemptLogin Response => \", response);\n\n    if (response.data.status) {\n      statusInt = response.data.data.authToken ? 1 : 2;\n      authToken = response.data.data.authToken ? response.data.data.authToken : null;\n    } else {\n      statusInt = 2;\n      authToken = null;\n    }\n  }).catch(function (error) {\n    console.log(\"attemptLogin Error => \", error);\n    statusInt = 3;\n  });\n  return {\n    statusInt,\n    authToken\n  };\n};\nexport const attemptLogout = async () => {\n  const authToken = localStorage.getItem('authToken');\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': authToken\n  };\n  await axios.post(API_URL + 'auth/logout', {\n    headers: headers\n  }).then(function (response) {\n    console.log(response);\n    localStorage.removeItem('authToken');\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const attemptRegister = async newContributor => {\n  var data = [];\n  let {\n    name,\n    email,\n    password\n  } = newContributor;\n  await axios.post(API_URL + 'auth/register', {\n    name,\n    email,\n    password\n  }).then(function (response) {\n    console.log(\"attemptRegister Response => \", response);\n    data = response.data;\n  }).catch(function (error) {\n    console.log(\"attemptRegister Error => \", error);\n    data = error;\n  });\n  return data;\n};\nexport const setLocalUserData = (authToken, userData) => {\n  localStorage.setItem('authToken', authToken);\n  localStorage.setItem('userData', userData);\n};\nexport const removeLocalUserData = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userData');\n};","map":{"version":3,"sources":["/Users/mac/react/gooroo-code-test/bigas-library-client/src/services/Auth.js"],"names":["axios","API_URL","attemptLogin","contributor","statusInt","authToken","email","password","post","then","response","console","log","data","status","catch","error","attemptLogout","localStorage","getItem","headers","removeItem","attemptRegister","newContributor","name","setLocalUserData","userData","setItem","removeLocalUserData"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { API_URL } from '../utils/Variables';\n\nexport const attemptLogin = async contributor =>{\n    \n    var statusInt = 0\n    let authToken = null\n    let { email, password } = contributor\n\n\n    await axios.post(API_URL+'auth/login', {\n        email,\n        password\n    })\n    .then(function (response) {\n        console.log(\"attemptLogin Response => \", response);\n        if(response.data.status){\n            statusInt = (response.data.data.authToken ? 1 : 2)\n            authToken = (response.data.data.authToken ? response.data.data.authToken : null)\n        }else{\n            statusInt = 2\n            authToken = null\n        }\n        \n    })\n    .catch(function (error) {\n        console.log(\"attemptLogin Error => \", error)\n        statusInt = 3\n    });\n\n    return {\n        statusInt,\n        authToken,\n    }\n}\n\nexport const attemptLogout = async () =>{\n\n    const authToken = localStorage.getItem('authToken');\n\n    const headers = {\n        'Content-Type': 'application/json',\n        'Authorization' : authToken\n    }\n\n\n    await axios.post(API_URL + 'auth/logout', {headers : headers})\n    .then(function (response) {\n        console.log(response);\n        localStorage.removeItem('authToken')\n    })\n    .catch(function (error) {\n        console.log(error)\n    });\n}\n\nexport const attemptRegister = async newContributor =>{\n    \n    var data = [];\n    let {name, email, password} = newContributor\n\n    await axios.post(API_URL+'auth/register', {\n        name,\n        email,\n        password\n    })\n    .then(function (response) {\n        console.log(\"attemptRegister Response => \", response);\n        data = response.data;\n        \n    })\n    .catch(function (error) {\n        console.log(\"attemptRegister Error => \", error)\n        data = error\n    });\n\n    return data\n}\n\nexport const setLocalUserData = (authToken, userData) =>{\n    localStorage.setItem('authToken', authToken)\n    localStorage.setItem('userData', userData)\n}\nexport const removeLocalUserData = () => {\n    localStorage.removeItem('authToken')\n    localStorage.removeItem('userData')\n}"]},"metadata":{},"sourceType":"module"}