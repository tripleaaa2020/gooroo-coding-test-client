{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../utils/Variables';\nexport const attemptLogin = async contributor => {\n  var statusInt = 0;\n  let authToken = '';\n  let userData = null;\n  let {\n    email,\n    password\n  } = contributor;\n  await axios.post(API_URL + 'auth/login', {\n    email,\n    password\n  }).then(function (response) {\n    console.log(\"attemptLogin Response => \", response);\n\n    if (response.data.status) {\n      statusInt = response.data.data.authToken ? 1 : 2;\n      authToken = response.data.data.authToken ? response.data.data.authToken : '';\n      userData = response.data.data.userData ? response.data.data.userData : null;\n    } else {\n      statusInt = 2;\n      token = null;\n    }\n  }).catch(function (error) {\n    console.log(\"attemptLogin Error => \", error);\n    statusInt = 3;\n  });\n  return {\n    statusInt,\n    authToken,\n    userData\n  };\n};\nexport const attemptRegister = async newContributor => {\n  var statusInt = 0;\n  let token = '';\n  let {\n    name,\n    email,\n    password\n  } = newContributor;\n  await axios.post(API_URL + 'auth/register', {\n    name,\n    email,\n    password\n  }).then(function (response) {\n    console.log(\"attemptRegister Response => \", response); // if(response.data.status){\n    //     statusInt = (response.data.data.login ? 1 : 2)\n    //     token = (response.data.data.login ? response.data.data.token : '')\n    // }else{\n    //     statusInt = 2\n    //     token = null\n    // }\n  }).catch(function (error) {\n    console.log(\"attemptRegister Error => \", error); // statusInt = 3\n  });\n  return {\n    statusInt,\n    token\n  };\n};\nexport const setLocalUserData = (authToken, userData) => {\n  localStorage.setItem('authToken', authToken);\n  localStorage.setItem('userData', userData);\n};\nexport const removeLocalUserData = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userData');\n};","map":{"version":3,"sources":["/Users/mac/react/gooroo-coding-test/bigas-library-client/src/services/Auth.js"],"names":["axios","API_URL","attemptLogin","contributor","statusInt","authToken","userData","email","password","post","then","response","console","log","data","status","token","catch","error","attemptRegister","newContributor","name","setLocalUserData","localStorage","setItem","removeLocalUserData","removeItem"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { API_URL } from '../utils/Variables';\n\nexport const attemptLogin = async contributor =>{\n    \n    var statusInt = 0\n    let authToken = ''\n    let userData = null;\n    let { email, password } = contributor\n\n\n    await axios.post(API_URL+'auth/login', {\n        email,\n        password\n    })\n    .then(function (response) {\n        console.log(\"attemptLogin Response => \", response);\n        if(response.data.status){\n            statusInt = (response.data.data.authToken ? 1 : 2)\n            authToken = (response.data.data.authToken ? response.data.data.authToken : '')\n            userData = (response.data.data.userData ? response.data.data.userData : null)\n        }else{\n            statusInt = 2\n            token = null\n        }\n        \n    })\n    .catch(function (error) {\n        console.log(\"attemptLogin Error => \", error)\n        statusInt = 3\n    });\n\n    return {\n        statusInt,\n        authToken,\n        userData\n    }\n}\n\nexport const attemptRegister = async newContributor =>{\n    \n    var statusInt = 0;\n    let token = '';\n    let {name, email, password} = newContributor\n\n    await axios.post(API_URL+'auth/register', {\n        name,\n        email,\n        password\n    })\n    .then(function (response) {\n        console.log(\"attemptRegister Response => \", response);\n        // if(response.data.status){\n        //     statusInt = (response.data.data.login ? 1 : 2)\n        //     token = (response.data.data.login ? response.data.data.token : '')\n        // }else{\n        //     statusInt = 2\n        //     token = null\n        // }\n        \n    })\n    .catch(function (error) {\n        console.log(\"attemptRegister Error => \", error)\n        // statusInt = 3\n    });\n\n    return {\n        statusInt,\n        token\n    }\n}\n\nexport const setLocalUserData = (authToken, userData) =>{\n    localStorage.setItem('authToken', authToken)\n    localStorage.setItem('userData', userData)\n}\nexport const removeLocalUserData = () => {\n    localStorage.removeItem('authToken')\n    localStorage.removeItem('userData')\n}"]},"metadata":{},"sourceType":"module"}