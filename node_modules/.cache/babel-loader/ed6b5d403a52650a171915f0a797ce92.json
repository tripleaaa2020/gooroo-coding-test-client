{"ast":null,"code":"import { SET_ACTIVE_CATEGORIES, SET_MY_BOOKS, SET_SEARCH_VALUE, SET_INITIAL_FORM_DETAILS, SET_FORM_DETAILS, RESET_FORM } from '../actions/MyBooksActions';\nconst initialState = {\n  activeCategories: [],\n  searchValue: '',\n  books: [],\n  form: {\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    categoryID: \"\"\n  }\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CATEGORIES:\n      var activeCategories = [...state.activeCategories];\n      var categoryFoundIndex = -1;\n\n      for (let i = 0; i < activeCategories.length; i++) {\n        if (activeCategories[i] == action.categoryID) {\n          categoryFoundIndex = i;\n          break;\n        }\n      }\n\n      categoryFoundIndex == -1 ? activeCategories.push(action.categoryID) : activeCategories.splice(categoryFoundIndex, 1);\n      return { ...state,\n        activeCategories\n      };\n\n    case SET_MY_BOOKS:\n      var books = action.books;\n      return { ...state,\n        books\n      };\n\n    case SET_SEARCH_VALUE:\n      var searchValue = action.e.target.value;\n      return { ...state,\n        searchValue\n      };\n\n    case SET_INITIAL_FORM_DETAILS:\n      var form = action.data;\n      return { ...state,\n        form\n      };\n\n    case SET_FORM_DETAILS:\n      console.log(\"action.e.target.value => \", action.e.target.value);\n      console.log(\"action.e.target.name => \", action.e.target.name);\n      var value = action.e.target.name === 'categoryID' && action.e.target.value !== \"\" ? parseInt(action.e.target.value) : action.e.target.value;\n      var form = { ...state.form,\n        [action.e.target.name]: value\n      };\n      return { ...state,\n        form\n      };\n\n    case RESET_FORM:\n      var form = {\n        title: \"\",\n        author: \"\",\n        publisher: \"\",\n        categoryID: \"\"\n      };\n      return { ...state,\n        form\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mac/react/gooroo-coding-test-client/src/store/reducers/MyBooksReducers.js"],"names":["SET_ACTIVE_CATEGORIES","SET_MY_BOOKS","SET_SEARCH_VALUE","SET_INITIAL_FORM_DETAILS","SET_FORM_DETAILS","RESET_FORM","initialState","activeCategories","searchValue","books","form","title","author","publisher","categoryID","state","action","type","categoryFoundIndex","i","length","push","splice","e","target","value","data","console","log","name","parseInt"],"mappings":"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","sourcesContent":["import {\n    SET_ACTIVE_CATEGORIES,\n    SET_MY_BOOKS,\n    SET_SEARCH_VALUE,\n    SET_INITIAL_FORM_DETAILS,\n    SET_FORM_DETAILS,\n    RESET_FORM\n} from '../actions/MyBooksActions'\n\nconst initialState = {\n    activeCategories: [],\n    searchValue: '',\n    books: [],\n    form: {\n        title: \"\",\n        author: \"\",\n        publisher: \"\",\n        categoryID: \"\",\n    }\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_CATEGORIES:\n\n            var activeCategories = [...state.activeCategories]\n            var categoryFoundIndex = -1;\n\n            for (let i = 0; i < activeCategories.length; i++) {\n                if (activeCategories[i] == action.categoryID) {\n                    categoryFoundIndex = i;\n                    break;\n                }\n            }\n\n            (categoryFoundIndex == -1) ?\n                activeCategories.push(action.categoryID) :\n                activeCategories.splice(categoryFoundIndex, 1);\n\n            return {\n                ...state,\n                activeCategories\n            }\n        case SET_MY_BOOKS:\n            var books = action.books;\n\n            return {\n                ...state,\n                books\n            }\n        case SET_SEARCH_VALUE:\n            var searchValue = action.e.target.value;\n\n            return {\n                ...state,\n                searchValue\n            }\n        case SET_INITIAL_FORM_DETAILS:\n            var form = action.data;\n\n            return {\n                ...state,\n                form\n            }\n        case SET_FORM_DETAILS:\n            console.log(\"action.e.target.value => \", action.e.target.value);\n            console.log(\"action.e.target.name => \", action.e.target.name)\n\n            var value = (action.e.target.name === 'categoryID' && action.e.target.value !== \"\") ?\n                parseInt(action.e.target.value) :\n                action.e.target.value;\n\n            var form = {\n                ...state.form,\n                [action.e.target.name]: value\n            }\n            return {\n                ...state,\n                form\n            }\n        case RESET_FORM:\n\n            var form = {\n                title: \"\",\n                author: \"\",\n                publisher: \"\",\n                categoryID: \"\",\n            }\n\n            return {\n                ...state,\n                form\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}