{"ast":null,"code":"/**\n * Pace\n *\n * A progress bar for the command-line.\n *\n * Example usage:\n *\n *     var total = 50000,\n *         count = 0,\n *         pace = require('pace')(total);\n *\n *     while (count++ < total) {\n *       pace.op();\n *\n *       // Cause some work to be done.\n *       for (var i = 0; i < 1000000; i++) {\n *         count = count;\n *       }\n *     }\n */\n// Module dependencies.\nvar charm = require('charm');\n/**\n * Pace 'class'.\n */\n\n\nfunction Pace(options) {\n  options = options || {}; // Total number of items to process.\n\n  if (!options.total) {\n    throw new Error('You MUST specify the total number of operations that will be processed.');\n  }\n\n  this.total = options.total; // Current item number.\n\n  this.current = 0; // Maximum percent of total time the progressbar is allowed to take during processing.\n  // Defaults to 0.5%\n\n  this.max_burden = options.maxBurden || 0.5; // Whether to show current burden %.\n\n  this.show_burden = options.showBurden || false; // Internal time tracking properties.\n\n  this.started = false;\n  this.size = 50;\n  this.inner_time = 0;\n  this.outer_time = 0;\n  this.elapsed = 0;\n  this.time_start = 0;\n  this.time_end = 0;\n  this.time_left = 0;\n  this.time_burden = 0;\n  this.skip_steps = 0;\n  this.skipped = 0;\n  this.aborted = false; // Setup charm.\n\n  this.charm = charm();\n  this.charm.pipe(process.stdout); // Prepare the output.\n\n  this.charm.write(\"\\n\\n\\n\");\n}\n/**\n * Export a factory function for new pace instances.\n */\n\n\nmodule.exports = function (options) {\n  if (typeof options === 'number') {\n    options = {\n      total: options\n    };\n  }\n\n  return new Pace(options);\n};\n/**\n * An operation has been emitted.\n */\n\n\nPace.prototype.op = function op(count) {\n  if (count) {\n    this.current = count;\n  } else {\n    this.current++;\n  }\n\n  if (this.burdenReached()) {\n    return;\n  } // Record the start time of the whole task.\n\n\n  if (!this.started) {\n    this.started = new Date().getTime();\n  } // Record start time.\n\n\n  this.time_start = new Date().getTime();\n  this.updateTimes();\n  this.clear();\n  this.outputProgress();\n  this.outputStats();\n  this.outputTimes(); // The task is complete.\n\n  if (this.current >= this.total) {\n    this.finished();\n  } // Record end time.\n\n\n  this.time_end = new Date().getTime();\n  this.inner_time = this.time_end - this.time_start;\n};\n/**\n * Update times.\n */\n\n\nPace.prototype.updateTimes = function updateTimes() {\n  this.elapsed = this.time_start - this.started;\n\n  if (this.time_end > 0) {\n    this.outer_time = this.time_start - this.time_end;\n  }\n\n  if (this.inner_time > 0 && this.outer_time > 0) {\n    // Set Current Burden\n    this.time_burden = this.inner_time / (this.inner_time + this.outer_time) * 100; // Estimate time left.\n\n    this.time_left = this.elapsed / this.current * (this.total - this.current);\n    if (this.time_left < 0) this.time_left = 0;\n  } // If our \"burden\" is too high, increase the skip steps.\n\n\n  if (this.time_burden > this.max_burden && this.skip_steps < this.total / this.size) {\n    this.skip_steps = Math.floor(++this.skip_steps * 1.3);\n  }\n};\n/**\n * Move the cursor back to the beginning and clear old output.\n */\n\n\nPace.prototype.clear = function clear() {\n  this.charm.erase('line').up(1).erase('line').up(1).erase('line').write(\"\\r\");\n};\n/**\n * Output the progress bar.\n */\n\n\nPace.prototype.outputProgress = function outputProgress() {\n  this.charm.write('Processing: ');\n  this.charm.foreground('green').background('green');\n\n  for (var i = 0; i < this.current / this.total * this.size - 1; i++) {\n    this.charm.write(' ');\n  }\n\n  this.charm.foreground('white').background('white');\n\n  while (i < this.size - 1) {\n    this.charm.write(' ');\n    i++;\n  }\n\n  this.charm.display('reset').down(1).left(100);\n};\n/**\n * Output numerical progress stats.\n */\n\n\nPace.prototype.outputStats = function outputStats() {\n  this.perc = this.current / this.total * 100;\n  this.perc = padLeft(this.perc.toFixed(2), 2);\n  this.charm.write('            ').display('bright').write(this.perc + '%').display('reset');\n  this.total_len = formatNumber(this.total).length;\n  this.charm.write('   ').display('bright').write(padLeft(formatNumber(this.current), this.total_len)).display('reset');\n  this.charm.write('/' + formatNumber(this.total)); // Output burden.\n\n  if (this.show_burden) {\n    this.charm.write('    ').display('bright').write('Burden: ').display('reset');\n    this.charm.write(this.time_burden.toFixed(2) + '% / ' + this.skip_steps);\n  }\n\n  this.charm.display('reset').down(1).left(100);\n};\n/**\n * Output times.\n */\n\n\nPace.prototype.outputTimes = function outputTimes() {\n  // Output times.\n  var hours = Math.floor(this.elapsed / (1000 * 60 * 60));\n  var min = Math.floor(this.elapsed / 1000 % (60 * 60) / 60);\n  var sec = Math.floor(this.elapsed / 1000 % 60);\n  this.charm.write('            ').display('bright').write('Elapsed: ').display('reset');\n  this.charm.write(hours + 'h ' + min + 'm ' + sec + 's');\n\n  if (this.time_left) {\n    hours = Math.floor(this.time_left / (1000 * 60 * 60));\n    min = Math.floor(this.time_left / 1000 % (60 * 60) / 60);\n    sec = Math.ceil(this.time_left / 1000 % 60);\n    this.charm.write('   ').display('bright').write('Remaining: ').display('reset');\n    this.charm.write(hours + 'h ' + min + 'm ' + sec + 's');\n  }\n};\n/**\n * The progress has finished.\n */\n\n\nPace.prototype.finished = function finished() {\n  this.charm.write(\"\\n\\n\");\n  this.charm.write('Finished!');\n  this.charm.write(\"\\n\\n\");\n};\n/**\n * Check if the burden threshold has been reached.\n */\n\n\nPace.prototype.burdenReached = function burdenReached() {\n  // Skip this cycle if the burden has determined we should.\n  if (this.skip_steps > 0 && this.current < this.total) {\n    if (this.skipped < this.skip_steps) {\n      this.skipped++;\n      return true;\n    } else {\n      this.skipped = 0;\n    }\n  }\n\n  return false;\n};\n/**\n * Utility functions.\n */\n// Left-pad a string.\n\n\nfunction padLeft(str, length, pad) {\n  pad = pad || ' ';\n\n  while (str.length < length) {\n    str = pad + str;\n  }\n\n  return str;\n} // Ported from php.js. Same has php's number_format().\n\n\nfunction formatNumber(number, decimals, dec_point, thousands_sep) {\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\n\n  var n = !isFinite(+number) ? 0 : +number,\n      prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n      sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep,\n      dec = typeof dec_point === 'undefined' ? '.' : dec_point,\n      s = '',\n      toFixedFix = function toFixedFix(n, prec) {\n    var k = Math.pow(10, prec);\n    return '' + Math.round(n * k) / k;\n  }; // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\n\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n\n  return s.join(dec);\n}","map":{"version":3,"sources":["/Users/mac/react/gooroo-coding-test-client/node_modules/pace/pace.js"],"names":["charm","require","Pace","options","total","Error","current","max_burden","maxBurden","show_burden","showBurden","started","size","inner_time","outer_time","elapsed","time_start","time_end","time_left","time_burden","skip_steps","skipped","aborted","pipe","process","stdout","write","module","exports","prototype","op","count","burdenReached","Date","getTime","updateTimes","clear","outputProgress","outputStats","outputTimes","finished","Math","floor","erase","up","foreground","background","i","display","down","left","perc","padLeft","toFixed","total_len","formatNumber","length","hours","min","sec","ceil","str","pad","number","decimals","dec_point","thousands_sep","replace","n","isFinite","prec","abs","sep","dec","s","toFixedFix","k","pow","round","split","Array","join"],"mappings":"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","sourcesContent":["/**\n * Pace\n *\n * A progress bar for the command-line.\n *\n * Example usage:\n *\n *     var total = 50000,\n *         count = 0,\n *         pace = require('pace')(total);\n *\n *     while (count++ < total) {\n *       pace.op();\n *\n *       // Cause some work to be done.\n *       for (var i = 0; i < 1000000; i++) {\n *         count = count;\n *       }\n *     }\n */\n\n// Module dependencies.\nvar charm = require('charm');\n\n/**\n * Pace 'class'.\n */\nfunction Pace(options) {\n  options = options || {};\n\n  // Total number of items to process.\n  if (!options.total) {\n    throw new Error('You MUST specify the total number of operations that will be processed.');\n  }\n  this.total = options.total;\n\n  // Current item number.\n  this.current = 0;\n\n  // Maximum percent of total time the progressbar is allowed to take during processing.\n  // Defaults to 0.5%\n  this.max_burden = options.maxBurden || 0.5;\n\n  // Whether to show current burden %.\n  this.show_burden = options.showBurden || false;\n\n  // Internal time tracking properties.\n  this.started = false;\n  this.size = 50;\n  this.inner_time = 0;\n  this.outer_time = 0;\n  this.elapsed = 0;\n  this.time_start = 0;\n  this.time_end = 0;\n  this.time_left = 0;\n  this.time_burden = 0;\n  this.skip_steps = 0;\n  this.skipped = 0;\n  this.aborted = false;\n\n  // Setup charm.\n  this.charm = charm();\n  this.charm.pipe(process.stdout);\n\n  // Prepare the output.\n  this.charm.write(\"\\n\\n\\n\");\n}\n\n/**\n * Export a factory function for new pace instances.\n */\nmodule.exports = function(options) {\n  if (typeof options === 'number') {\n    options = {\n      total: options\n    };\n  }\n  return new Pace(options);\n};\n\n/**\n * An operation has been emitted.\n */\nPace.prototype.op = function op(count) {\n  if (count) {\n    this.current = count;\n  }\n  else {\n    this.current++;\n  }\n\n  if (this.burdenReached()) {\n    return;\n  }\n\n  // Record the start time of the whole task.\n  if (!this.started) {\n    this.started = new Date().getTime();\n  }\n\n  // Record start time.\n  this.time_start = new Date().getTime();\n\n  this.updateTimes();\n  this.clear();\n  this.outputProgress();\n  this.outputStats();\n  this.outputTimes();\n\n  // The task is complete.\n  if (this.current >= this.total) {\n    this.finished();\n  }\n\n  // Record end time.\n  this.time_end = new Date().getTime();\n  this.inner_time = this.time_end - this.time_start;\n};\n\n/**\n * Update times.\n */\nPace.prototype.updateTimes = function updateTimes() {\n  this.elapsed = this.time_start - this.started;\n  if (this.time_end > 0) {\n    this.outer_time = this.time_start - this.time_end;\n  }\n  if (this.inner_time > 0 && this.outer_time > 0) {\n    // Set Current Burden\n    this.time_burden = (this.inner_time / (this.inner_time + this.outer_time)) * 100;\n\n    // Estimate time left.\n    this.time_left = (this.elapsed / this.current) * (this.total - this.current);\n\n    if (this.time_left < 0) this.time_left = 0;\n  }\n  // If our \"burden\" is too high, increase the skip steps.\n  if (this.time_burden > this.max_burden && (this.skip_steps < (this.total / this.size))) {\n    this.skip_steps = Math.floor(++this.skip_steps * 1.3);\n  }\n};\n\n/**\n * Move the cursor back to the beginning and clear old output.\n */\nPace.prototype.clear = function clear() {\n  this.charm.erase('line').up(1).erase('line').up(1).erase('line').write(\"\\r\");\n};\n\n/**\n * Output the progress bar.\n */\nPace.prototype.outputProgress = function outputProgress() {\n  this.charm.write('Processing: ');\n  this.charm.foreground('green').background('green');\n  for (var i = 0; i < ((this.current / this.total) * this.size) - 1 ; i++) {\n     this.charm.write(' ');\n  }\n  this.charm.foreground('white').background('white');\n  while (i < this.size - 1) {\n    this.charm.write(' ');\n    i++;\n  }\n  this.charm.display('reset').down(1).left(100);\n};\n\n/**\n * Output numerical progress stats.\n */\nPace.prototype.outputStats = function outputStats() {\n  this.perc = (this.current/this.total)*100;\n  this.perc = padLeft(this.perc.toFixed(2), 2);\n  this.charm.write('            ').display('bright').write(this.perc + '%').display('reset');\n  this.total_len = formatNumber(this.total).length;\n  this.charm.write('   ').display('bright').write(padLeft(formatNumber(this.current), this.total_len)).display('reset');\n  this.charm.write('/' + formatNumber(this.total));\n\n  // Output burden.\n  if (this.show_burden) {\n    this.charm.write('    ').display('bright').write('Burden: ').display('reset');\n    this.charm.write(this.time_burden.toFixed(2) + '% / ' + this.skip_steps);\n  }\n\n  this.charm.display('reset').down(1).left(100);\n};\n\n/**\n * Output times.\n */\nPace.prototype.outputTimes = function outputTimes() {\n  // Output times.\n  var hours = Math.floor(this.elapsed / (1000 * 60 * 60));\n  var min = Math.floor(((this.elapsed / 1000) % (60 * 60)) / 60);\n  var sec = Math.floor((this.elapsed / 1000) % 60);\n\n  this.charm.write('            ').display('bright').write('Elapsed: ').display('reset');\n  this.charm.write(hours + 'h ' + min + 'm ' + sec + 's');\n\n  if (this.time_left){\n    hours = Math.floor(this.time_left / (1000 * 60 * 60));\n    min = Math.floor(((this.time_left / 1000) % (60 * 60)) / 60);\n    sec = Math.ceil((this.time_left / 1000) % 60);\n\n    this.charm.write('   ').display('bright').write('Remaining: ').display('reset');\n    this.charm.write(hours + 'h ' + min + 'm ' + sec + 's');\n  }\n};\n\n/**\n * The progress has finished.\n */\nPace.prototype.finished = function finished() {\n  this.charm.write(\"\\n\\n\");\n  this.charm.write('Finished!');\n  this.charm.write(\"\\n\\n\");\n};\n\n/**\n * Check if the burden threshold has been reached.\n */\nPace.prototype.burdenReached = function burdenReached() {\n  // Skip this cycle if the burden has determined we should.\n  if ((this.skip_steps > 0) && (this.current < this.total)) {\n    if (this.skipped < this.skip_steps) {\n      this.skipped++;\n      return true;\n    }\n    else {\n      this.skipped = 0;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Utility functions.\n */\n\n// Left-pad a string.\nfunction padLeft(str, length, pad) {\n  pad = pad || ' ';\n  while (str.length < length)\n    str = pad + str;\n  return str;\n}\n\n// Ported from php.js. Same has php's number_format().\nfunction formatNumber(number, decimals, dec_point, thousands_sep) {\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n    s = '',\n    toFixedFix = function (n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n"]},"metadata":{},"sourceType":"script"}