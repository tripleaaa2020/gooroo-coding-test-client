{"ast":null,"code":"import { SET_ACTIVE_CATEGORIES, SET_LIBRARY_BOOKS, SET_SEARCH_VALUE } from '../actions/LibraryActions';\nconst initialState = {\n  activeCategories: [],\n  searchValue: '',\n  books: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CATEGORIES:\n      var activeCategories = [...state.activeCategories];\n      var categoryFoundIndex = -1;\n\n      for (let i = 0; i < activeCategories.length; i++) {\n        if (activeCategories[i] == action.categoryID) {\n          categoryFoundIndex = i;\n          break;\n        }\n      }\n\n      categoryFoundIndex == -1 ? activeCategories.push(action.categoryID) : activeCategories.splice(categoryFoundIndex, 1);\n      return { ...state,\n        activeCategories\n      };\n\n    case SET_LIBRARY_BOOKS:\n      var books = action.books;\n      return { ...state,\n        books\n      };\n\n    case SET_SEARCH_VALUE:\n      var searchValue = action.e.target.value;\n      return { ...state,\n        searchValue\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mac/react/gooroo-coding-test/bigas-library-client/src/store/reducers/LibraryReducer.js"],"names":["SET_ACTIVE_CATEGORIES","SET_LIBRARY_BOOKS","SET_SEARCH_VALUE","initialState","activeCategories","searchValue","books","state","action","type","categoryFoundIndex","i","length","categoryID","push","splice","e","target","value"],"mappings":"AAAA,SACIA,qBADJ,EAEIC,iBAFJ,EAGIC,gBAHJ,QAIO,2BAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,EADD;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,qBAAL;AAEI,UAAII,gBAAgB,GAAG,CAAC,GAAGG,KAAK,CAACH,gBAAV,CAAvB;AACA,UAAIM,kBAAkB,GAAG,CAAC,CAA1B;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,gBAAgB,CAACQ,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,YAAIP,gBAAgB,CAACO,CAAD,CAAhB,IAAuBH,MAAM,CAACK,UAAlC,EAA8C;AAC1CH,UAAAA,kBAAkB,GAAGC,CAArB;AACA;AACH;AACJ;;AAEAD,MAAAA,kBAAkB,IAAI,CAAC,CAAxB,GACIN,gBAAgB,CAACU,IAAjB,CAAsBN,MAAM,CAACK,UAA7B,CADJ,GAEIT,gBAAgB,CAACW,MAAjB,CAAwBL,kBAAxB,EAA4C,CAA5C,CAFJ;AAIA,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA;AAFG,OAAP;;AAIJ,SAAKH,iBAAL;AACI,UAAIK,KAAK,GAAGE,MAAM,CAACF,KAAnB;AAEA,aAAO,EACH,GAAGC,KADA;AAEHD,QAAAA;AAFG,OAAP;;AAIJ,SAAKJ,gBAAL;AACI,UAAIG,WAAW,GAAGG,MAAM,CAACQ,CAAP,CAASC,MAAT,CAAgBC,KAAlC;AAEA,aAAO,EACH,GAAGX,KADA;AAEHF,QAAAA;AAFG,OAAP;;AAIJ;AACI,aAAOE,KAAP;AApCR;AAsCH,CAvCD","sourcesContent":["import {\n    SET_ACTIVE_CATEGORIES,\n    SET_LIBRARY_BOOKS,\n    SET_SEARCH_VALUE\n} from '../actions/LibraryActions'\n\nconst initialState = {\n    activeCategories: [],\n    searchValue: '',\n    books: [],\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_CATEGORIES:\n\n            var activeCategories = [...state.activeCategories]\n            var categoryFoundIndex = -1;\n\n            for (let i = 0; i < activeCategories.length; i++) {\n                if (activeCategories[i] == action.categoryID) {\n                    categoryFoundIndex = i;\n                    break;\n                }\n            }\n\n            (categoryFoundIndex == -1) ?\n                activeCategories.push(action.categoryID) :\n                activeCategories.splice(categoryFoundIndex, 1);\n\n            return {\n                ...state,\n                activeCategories\n            }\n        case SET_LIBRARY_BOOKS:\n            var books = action.books;\n\n            return {\n                ...state,\n                books\n            }\n        case SET_SEARCH_VALUE:\n            var searchValue = action.e.target.value;\n\n            return {\n                ...state,\n                searchValue\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}